apiVersion: apps/v1
kind: Deployment
metadata:
  name: "{{ template "app.chartname" . }}"
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "app.labels" . | nindent 4 }}
    app.kubernetes.io/instance: {{ include "app.revision" . }}
    app.kubernetes.io/part-of: rse
spec:
  replicas: {{ .Values.replicaCount }}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      {{- include "app.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "app.labels" . | nindent 8 }}
      annotations:
        {{- include "app.metricsAnnotations" . | nindent 8 }}
{{- if .Values.podAnnotations }}
{{ toYaml .Values.podAnnotations | indent 8 }}
{{- end }}
    spec:
      securityContext:
{{- include "app.securitycontext" . | nindent 8 }}
      {{- if .Values.image.pullSecrets }}
      imagePullSecrets:
        - name: {{ .Values.image.pullSecrets }}
      {{- end }}
      containers:
      - name: {{ template "app.chartname" . }}
        image: "{{ .Values.image.repository }}/{{ .Values.image.name }}:{{ default .Chart.AppVersion .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy | quote }}
        {{- if .Values.image.command }}
        command: 
          {{- toYaml .Values.image.command | nindent 8 }}
        {{- end }}
        {{- if .Values.image.args }}
        args: 
          {{- toYaml .Values.image.args | nindent 8 }}
        {{- end }}

      {{- if .Values.useSecretRef }}
        envFrom:
          - secretRef:
            name: {{ .Values.secretRefName }}
      {{- else if .Values.useConfigMap }}
        envFrom:
          - configMapRef:
              name: {{ .Values.configMapName }}
      {{- else }}
        env:
          # general
          - name: NODE_ENV
            {{- if .Values.config.environment }}
            value: {{ .Values.config.environment | quote }}
            {{- else }}
            value: 'development'
            {{- end }}
          - name: NX_API_ENDPOINT
            {{- if .Values.config.apiEndPoint }}
            value: {{ .Values.config.apiEndPoint | quote }}
            {{- else }}
            value: '/api'
            {{- end }}
          
          # server
          - name: SERVER_ENDPOINT
            value: 'http://localhost:{{ .Values.config.http.port }}'
          - name: SERVER_THROTLLER_TTL
            value: '60'
          - name: SERVER_THROTLLER_LIMIT
            value: '10'

          #logger
          ## types "console"/"winston"
          - name: LOGGER_TYPE
            value: 'console'

          # - name: DEBUG
          #   value: "ioredis:*"

          # winston config
          - name: LOGGER_WINSTON_LEVEL
            value: 'info'
          - name: LOGGER_WINSTON_TRANSPORTS_CONSOLE
            value: 'true'
          - name: LOGGER_WINSTON_TRANSPORTS_FILE
            value: 'logs/app.log'

          ## types "memory"/"redis"
          - name: CACHE_TYPE
            value: "redis"
          - name: CACHE_TTL
            value: "86400"
          - name: TOKEN_TTL
            value: "86400"
          # 14 days in milliseconds
          - name: SD_CACHE_TTL
            value: "1209600000"
          # 24 hours in milliseconds
          - name: SD_QUEUE_DELAY
            value: "86400000"
          # QUEUE RETRIES
          - name: SD_QUEUE_RETRIES
            value: "13"

          # db
          {{- if .Values.postgresql.enabled }}
          - name: DATABASE_HOST
            value: "{{ template "app.chartname" . }}-postgresql.{{ .Release.Namespace }}.svc.cluster.local"
          {{- if .Values.postgresql.auth.username }}
          - name: DATABASE_USER
            value: {{ .Values.postgresql.auth.username | quote }}
          {{- end }}
          {{- if .Values.postgresql.auth.database }}
          - name: DATABASE_DATABASE
            value: {{ .Values.postgresql.auth.database | quote }}
          {{- end }}
          - name: DATABASE_PARAMS
            value: "sslmode:disable"
          - name: DATABASE_PORT
            value: "5432"
          {{- else }}
          {{- if .Values.config.database.host }}
          - name: DATABASE_HOST
            value: {{ .Values.config.database.host | quote }}  
          {{- end }}
          {{- if .Values.config.database.username }}
          - name: DATABASE_USER
            value: {{ .Values.config.database.username | quote }}
          {{- end }}
          {{- if .Values.config.database.db }}
          - name: DATABASE_DATABASE
            value: {{ .Values.config.database.db | quote }}
          {{- end }}
          {{- if .Values.config.database.params }}
          - name: DATABASE_PARAMS
            value: {{ .Values.config.database.params | quote }} 
          {{- end }} 
          {{- if .Values.config.database.port }}
          - name: DATABASE_PORT
            value: "{{ .Values.config.database.port | quote }}"
          {{- end }}
          {{- end }}
          - name:  DATABASE_PASSWORD
            valueFrom:
              secretKeyRef:
                name: "{{ template "app.chartname" . }}-postgresql"
                key: postgres-password

          ## redis config
          ## types node/cluster
          - name: REDIS_TYPE
            value: 'node'
          {{- if .Values.redis.enabled }}
          - name: REDIS_HOST
            value: "{{ include "app.chartname" . }}-redis-master.{{ .Release.Namespace }}.svc.cluster.local"
          - name: REDIS_PORT
            value: "6379"
          {{- else }}
          - name: REDIS_HOST
            value: {{ .Values.redis.host | quote }}
          - name: REDIS_PORT
            value: {{ .Values.redis.port | quote }}
          {{- end }}
          - name: REDIS_PREFIX
            value: 'del:'
          - name: REDIS_PASSWORD
            valueFrom:
              secretKeyRef:
                name: {{ include "app.chartname" . }}-redis
                key: redis-password

          # admin config
          - name: ADMIN_USERNAME
            {{- if .Values.config.admin.username }}
            value: {{ .Values.config.admin.username | quote }}
            {{- end }}
          - name: ADMIN_PASSWORD
            {{- if .Values.config.admin.password }}
            valueFrom:
              secretKeyRef:
                name: {{ include "app.chartname" . }}-admin-password
                key: password
            {{- end }}
          - name: ADMIN_JWT_SECRET_KEY
            {{- if .Values.config.admin.jwtSecretKey }}
            valueFrom:
              secretKeyRef:
                name: {{ include "app.chartname" . }}-admin-jwt-secret
                key: secret
            {{- end }}
          - name: ADMIN_JWT_EXPIRES_IN_MINUTES
            value: '120'
          - name: BACKUP_LOCATION
            {{- if .Values.config.backup.location }}
            value: {{ .Values.config.backup.location | quote }}
            {{- end }}
          - name: BACKUP_CRON
            {{- if .Values.config.backup.cron }}
            value: {{ .Values.config.backup.cron | quote }}
            {{- end }}

          # admin settings - used to seed default settings
          - name: SETTING_LOG_RETENTION_PERIOD_DAYS
            value: '30'
          - name: SETTING_LOG_PRUNING_CRON
            value: '*/1 * * * *'
          - name: SETTING_LOG_INTEGRITY_CRON
            value: '*/1 * * * *'

          # gateways
          - name: TRUST_SERVICE_GATEWAY_HOST
            {{- if .Values.config.trustServiceUrl }}
            value: {{ .Values.config.trustServiceUrl | quote }}
            {{- end }}
          - name: CAM_GATEWAY_HOST
            {{- if .Values.config.camServiceUrl }}
            value: {{ .Values.config.camServiceUrl | quote }}
            {{- end }}
          - name: DCT_GATEWAY_HOST
            {{- if .Values.config.dctServiceUrl }}
            value: {{ .Values.config.dctServiceUrl | quote }}
            {{- end }}

        {{- if .Values.secretEnv }}
        {{- range $key, $value := .Values.secretEnv }}
          - name: "{{ $key }}"
            valueFrom:
              secretKeyRef:
                name: "{{ $value.name }}"
                key: "{{ $value.key }}"
        {{- end }}
        {{- end }}
      {{- end }}
{{- if .Values.extraVars }}
{{ toYaml .Values.extraVars | indent 8 }}
{{- end }}
        ports:
        {{- if .Values.metrics.enabled }}
        - name: monitoring
          containerPort: {{ .Values.metrics.port }}
        {{- end }}
        - name: http
          containerPort: {{ .Values.config.http.port }}
        volumeMounts:
          {{- if .Values.config.backup.location }}
          - mountPath: {{ .Values.config.backup.location | quote }}
            name: db-backups
          {{- end }}
        readinessProbe:
          httpGet:
            path: {{ default "/api" .Values.config.apiEndPoint | trimSuffix "/" }}/health
            port: {{ .Values.config.http.port }}
          initialDelaySeconds: 5
          periodSeconds: 5
          successThreshold: 2
          failureThreshold: 2
          timeoutSeconds: 5
        resources:
{{ toYaml .Values.resources | indent 10 }}
      volumes:
        {{- if .Values.config.backup.location }}
        - name: db-backups
          persistentVolumeClaim:
            claimName: {{ template "app.chartname" . }}-db-backup
        {{ end }}