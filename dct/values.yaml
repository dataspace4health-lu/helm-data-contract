# -- Default number of instances to start 
replicaCount: 1
# -- Application name
name: dct
# -- Ovverwrites application name
# nameOverride: ""

image:
  repository: registry.gitlab.com/gaia-x/data-infrastructure-federation-services
  # -- Image name
  name: dct/dct
  # -- Image tag
  # Uses .Chart.AppVersion if empty
  tag: "3ee4b875"
  # -- Image sha, usually generated by the CI
  # Uses image.tag if empty
  sha: ""
  # -- Image pull policy
  pullPolicy: IfNotPresent
  # -- Image pull secret when internal image is used
  pullSecrets:
  # command: 
  #   - "/bin/sh"
  # args: 
  #   - "-c"
  #   - |
  #     set -x

  #     rm -rf node_modules dist
  #     mkdir repo && cd repo && apk add git
  #     git clone https://gitlab.eclipse.org/eclipse/xfsc/dct/dct.git && cd dct
  #     npm config set @gaia-x:registry https://gitlab.com/api/v4/projects/38989724/packages/npm/
  #     npm i -g @nrwl/cli
  #     npm ci --legacy-peer-deps
  #     npm run build
  #     npm ci --only=production --legacy-peer-deps && npm cache clean --force

  #     mv dist / && mv node_modules / && cd / && rm -rf repo
  #     node dist/apps/api/main.js

## Use configMap or secretRef for environment variables
# useConfigMap: false
# configMapName: my-configmap
# useSecretRef: false
# secretRefName: my-secret

podAnnotations: {}
##
## Pass extra environment variables to the container.
##
# extraVars:
# - name: EXTRA_VAR_1
#   value: extra-var-value-1
# - name: EXTRA_VAR_2
#   value: extra-var-value-2
##
## Create new service when true, and use the specified uner name when set to the name specified
##

# resources:
#   requests:
#     cpu: 150m
#     memory: 128Mi
#   limits:
#     cpu: 300m
#     memory: 256Mi

## Configure pod autoscaling
##

autoscaling:
  # -- Enable autoscaling
  enabled: false
  # -- Minimum replicas
  minReplicas: 2
  # -- Maximum replicas
  maxReplicas: 3
  # -- CPU target for autoscaling trigger
  targetCPUUtilizationPercentage: 70
  # -- Memory target for autoscaling trigger
  targetMemoryUtilizationPercentage: 70
##
## Prometheus Exporter / Metrics
##

metrics:
  # -- Enable prometheus metrics
  enabled: false #true
  # -- Port for prometheus metrics
  port: 2112

log:
  level: "debug"
  encoding: json

##
## Kubernetes [SecurityContext](https://kubernetes.io/docs/tasks/configure-pod-container/security-context/) object.
##

security:
  # -- by default, apps run as non-root
  runAsNonRoot: false
  # -- User used by the apps
  runAsUid: 0
  # -- Group used by the apps
  runAsGid: 0
##
##
service:
  port: 8080

nats:
  enabled: true
  auth:
    enabled: false

config:
  environment: development

  trustServiceUrl: "https://trust-service.com"
  federatedCatalogUrl: "https://federated-catalog.com"
  signatureId: "did:dcs:key:123"
  signatureType: "Ed25519VerificationKey2018"
  signatureController: "did:dcs:controller"
  signaturePublicKeyBase58: "45dxsXGjMixWNfmXBtWwPnCfGgV1THf6qhdLixUmgrVZ"
  signaturePrivateKeyBase58: "45dxsXGjMixWNfmXBtWwPnCfGgV1THf6qhdLixUmgrVZ"

  logTokenJwtSecretKey: "somesecretkey"

  http:
    host: ""
    port: 3000
    timeout:
      idle: 120s
      read: 10s
      write: 10s
  redis:
    host:
    port:

redis:
  enabled: true
  auth:
    password: "test"
  master:
    persistence:
      size: 5Gi
  replica:
    replicaCount: 1
    persistence:
      size: 5Gi
  addr: "redis-master:6379"
  user: "" 
  pass: ""
  db: 0
  expiration: 1h

ingress:
  enabled: true
  hosts:
    - paths:
      - path: /dct
        port: 8080
        pathType: Prefix
  rewriteTarget:
    regex: /dct(/|$)(.*)
    replacement: /$2
  tls:
    - secretName: dataspace4health.local
      hosts:
        - dataspace4health.local

# istio:
#   injection:
#     pod: true

secretEnv:

