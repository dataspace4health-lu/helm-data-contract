# -- Default number of instances to start 
replicaCount: 1
# -- Application name
name: del
# -- Ovverwrites application name
# nameOverride: ""

image:
  repository: registry.gitlab.com/gaia-x/data-infrastructure-federation-services
  # -- Image name
  name: del/del
  # -- Image tag
  # Uses .Chart.AppVersion if empty
  tag: "e5878d8f"
  # -- Image sha, usually generated by the CI
  # Uses image.tag if empty
  sha: ""
  # -- Image pull policy
  pullPolicy: IfNotPresent
  # -- Image pull secret when internal image is used
  pullSecrets:
  command: 
    - "/bin/sh"
  args: 
    - "-c"
    - |
      set -x

      rm -rf dist node_modules
      
      mkdir repo && cd repo && apk add git
      git clone https://gitlab.eclipse.org/eclipse/xfsc/del.git && cd del
      git checkout e5878d8f3582849b6be9181ecb9fd78095c8d213
      
      sed -i 's|"baseHref": "/",|"baseHref": "/del/",|' apps/ui/project.json
      sed -i 's|href="/assets|href="assets|' apps/ui/src/index.html
      sed -i 's|<BrowserRouter>|<BrowserRouter basename="/del">|' apps/ui/src/main.tsx
      sed -i 's|"outputPath": "dist/apps/ui",|"outputPath": "dist/apps/ui/del",|' apps/ui/project.json
      
      sed -i 's|${location.pathname}|${window.location.pathname}|' apps/ui/src/app/routes.tsx
      sed -i "s|app.setGlobalPrefix('api');|app.setGlobalPrefix('del/api');|" apps/api/src/main.ts
      sed -i "s|SwaggerModule.setup('swagger', app, document);|SwaggerModule.setup('del/swagger', app, document);|" apps/api/src/main.ts

      npm config set @gaia-x:registry https://gitlab.com/api/v4/projects/38989724/packages/npm/
      npm i -g @nrwl/cli
      npm ci --legacy-peer-deps
      npm run build
      npm ci --only=production --legacy-peer-deps && npm cache clean --force

      mv dist/apps/ui/del/index.html dist/apps/ui
      mv dist / && mv node_modules / && cd /
      rm -rf repo
      node dist/apps/api/main.js

## Use configMap or secretRef for environment variables
# useConfigMap: false
# configMapName: my-configmap
# useSecretRef: false
# secretRefName: my-secret

podAnnotations: {}
##
## Pass extra environment variables to the container.
##
# extraVars:
# - name: EXTRA_VAR_1
#   value: extra-var-value-1
# - name: EXTRA_VAR_2
#   value: extra-var-value-2
##
## Create new service when true, and use the specified uner name when set to the name specified
##

# resources:
#   requests:
#     cpu: 150m
#     memory: 128Mi
#   limits:
#     cpu: 300m
#     memory: 256Mi

## Configure pod autoscaling
##

autoscaling:
  # -- Enable autoscaling
  enabled: false
  # -- Minimum replicas
  minReplicas: 2
  # -- Maximum replicas
  maxReplicas: 3
  # -- CPU target for autoscaling trigger
  targetCPUUtilizationPercentage: 70
  # -- Memory target for autoscaling trigger
  targetMemoryUtilizationPercentage: 70
##
## Prometheus Exporter / Metrics
##

metrics:
  # -- Enable prometheus metrics
  enabled: false #true
  # -- Port for prometheus metrics
  port: 2112

log:
  level: "debug"
  encoding: json

##
## Kubernetes [SecurityContext](https://kubernetes.io/docs/tasks/configure-pod-container/security-context/) object.
##

security:
  # -- by default, apps run as non-root
  runAsNonRoot: false
  # -- User used by the apps
  runAsUid: 0
  # -- Group used by the apps
  runAsGid: 0
##
##
service:
  port: 8080

config:
  environment: development # development or production
  apiEndPoint: /del/api
  admin:
    username: admin
    password: xfsc4Ntt!
    jwtSecretKey: dafgsdfgsdfgasdfasdf
  backup:
    location: /backups
    cron: "*/5 * * * *"
  trustServiceUrl: https://trust-service.com
  dctServiceUrl: http://dct-service.com
  camServiceUrl: http://example.com
  documentationUrl: http://api-docs.com
  http:
    host: ""
    port: 3000
    timeout:
      idle: 120s
      read: 10s
      write: 10s
  redis:
    host:
    port:

redis:
  enabled: true
  auth:
    password: "xfsc4Ntt!"
  master:
    persistence:
      size: 5Gi
  replica:
    replicaCount: 1
    persistence:
      size: 5Gi

postgresql:
  enabled: true
  auth:
    postgresPassword: "xfsc4Ntt!"
    username: "postgres"
    password: "xfsc4Ntt!"
    database: postgres

ingress:
  enabled: true
  hosts:
    - paths:
      - path: /del
        port: 8080
        pathType: Prefix

  tls:
    - secretName: dataspace4health.local
      hosts:
        - dataspace4health.local

# istio:
#   injection:
#     pod: true

secretEnv:

